/*
Author:			This code was generated by DALGen version 1.1.0.0 available at https://github.com/H0r53/DALGen 
Date:			10/19/2018
Description:	Creates the page table and respective stored procedures

*/


USE ballhouseandcottages;



-- ------------------------------------------------------------
-- Drop existing objects
-- ------------------------------------------------------------

DROP TABLE IF EXISTS `ballhouseandcottages`.`page`;
DROP PROCEDURE IF EXISTS `ballhouseandcottages`.`usp_page_Load`;
DROP PROCEDURE IF EXISTS `ballhouseandcottages`.`usp_page_LoadAll`;
DROP PROCEDURE IF EXISTS `ballhouseandcottages`.`usp_page_Add`;
DROP PROCEDURE IF EXISTS `ballhouseandcottages`.`usp_page_Update`;
DROP PROCEDURE IF EXISTS `ballhouseandcottages`.`usp_page_Delete`;
DROP PROCEDURE IF EXISTS `ballhouseandcottages`.`usp_page_Search`;


-- ------------------------------------------------------------
-- Create table
-- ------------------------------------------------------------



CREATE TABLE `ballhouseandcottages`.`page` (
Id INT AUTO_INCREMENT,
Name VARCHAR(50),
Description VARCHAR(1024),
FileName VARCHAR(50),
CONSTRAINT pk_page_Id PRIMARY KEY (Id)
);


-- ------------------------------------------------------------
-- Create default SCRUD sprocs for this table
-- ------------------------------------------------------------


DELIMITER //
CREATE PROCEDURE `ballhouseandcottages`.`usp_page_Load`
(
	 IN paramId INT
)
BEGIN
	SELECT
		`page`.`Id` AS `Id`,
		`page`.`Name` AS `Name`,
		`page`.`Description` AS `Description`,
		`page`.`FileName` AS `FileName`
	FROM `page`
	WHERE 		`page`.`Id` = paramId;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE `ballhouseandcottages`.`usp_page_LoadAll`
()
BEGIN
	SELECT
		`page`.`Id` AS `Id`,
		`page`.`Name` AS `Name`,
		`page`.`Description` AS `Description`,
		`page`.`FileName` AS `FileName`
	FROM `page`;
END //
DELIMITER ;

DELIMITER //
CREATE PROCEDURE `ballhouseandcottages`.`usp_page_Add`
(
	 IN paramName VARCHAR(50),
	 IN paramDescription VARCHAR(1024),
	 IN paramFileName VARCHAR(50)
)
BEGIN
	INSERT INTO `page` (Name,Description,FileName)
	VALUES (paramName, paramDescription, paramFileName);
	-- Return last inserted ID as result
	SELECT LAST_INSERT_ID() as id;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `ballhouseandcottages`.`usp_page_Update`
(
	IN paramId INT,
	IN paramName VARCHAR(50),
	IN paramDescription VARCHAR(1024),
	IN paramFileName VARCHAR(50)
)
BEGIN
	UPDATE `page`
	SET Name = paramName
		,Description = paramDescription
		,FileName = paramFileName
	WHERE		`page`.`Id` = paramId;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `ballhouseandcottages`.`usp_page_Delete`
(
	IN paramId INT
)
BEGIN
	DELETE FROM `page`
	WHERE		`page`.`Id` = paramId;
END //
DELIMITER ;


DELIMITER //
CREATE PROCEDURE `ballhouseandcottages`.`usp_page_Search`
(
	IN paramId INT,
	IN paramName VARCHAR(50),
	IN paramDescription VARCHAR(1024),
	IN paramFileName VARCHAR(50)
)
BEGIN
	SELECT
		`page`.`Id` AS `Id`,
		`page`.`Name` AS `Name`,
		`page`.`Description` AS `Description`,
		`page`.`FileName` AS `FileName`
	FROM `page`
	WHERE
		COALESCE(page.`Id`,0) = COALESCE(paramId,page.`Id`,0)
		AND COALESCE(page.`Name`,'') = COALESCE(paramName,page.`Name`,'')
		AND COALESCE(page.`Description`,'') = COALESCE(paramDescription,page.`Description`,'')
		AND COALESCE(page.`FileName`,'') = COALESCE(paramFileName,page.`FileName`,'');
END //
DELIMITER ;


